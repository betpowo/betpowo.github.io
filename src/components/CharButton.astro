---

interface Props {
	char?: string;
    color?: string;
    outline?: string;
    size?: string
}
const { char = 'betty', color = '#966', outline = '#ffc', size = '300' } = Astro.props;
---
<div style={`width: ${size}px;`}>
    <a href={`/characters/${char.toLowerCase()}`} style="max-width: fit-content; max-height: fit-content;">
        <div class="char-button" style={`--char-color: ${color}; --hover-color: ${outline};`} title={char} >
            <object class="bleh" width={size} data={`/characters/${char.toLowerCase()}/art.svg`}></object>
        </div>
    </a>
</div>

<style lang="scss">
.char-button {
    --char-color: #966;
    --hover-color: #ffc;
    --outline-radius: 2px;
    --outline-color: var(--char-color);
    background-color: var(--col-dark);
    border-radius: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 16px;
    transition: 0.1s all;
    width: fit-content;
    max-width: 250px;
    height: fit-content;
    max-height: fit-content;
    box-shadow: inset 0 0 0 0px var(--hover-color);
    transition-timing-function: linear;
}

.char-button:hover {
    background-color: var(--char-color);
    box-shadow: inset 0 0 0 6px var(--hover-color);
}

.char-button .bleh {
    max-width: 250px;
    pointer-events: none;
    text-align: center;
    transition: 0.1s filter;
    transition-timing-function:linear;
    filter: 
    drop-shadow(calc(2*var(--outline-radius)) calc(2*var(--outline-radius)) 0px var(--outline-color))
    drop-shadow(calc(2*var(--outline-radius)) calc(-1*var(--outline-radius)) 0px var(--outline-color))
    drop-shadow(calc(-1*var(--outline-radius)) calc(2*var(--outline-radius)) 0px var(--outline-color))
    drop-shadow(calc(-1*var(--outline-radius)) calc(-1*var(--outline-radius)) 0px var(--outline-color))
}

.char-button:hover .bleh {
    animation: shake 0.5s;
    animation-iteration-count: 1;
    --outline-radius: 5px;
    --outline-color: var(--hover-color);
}

// god i wish there was an easier way to do this
@keyframes shake {
    0% { translate: 0px 0px }
    20% { translate: 0px -2px }
    100% { translate: 0px 0px }
}
</style>