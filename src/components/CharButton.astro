---
interface Props {
    char?: string;
    color?: string;
    outline?: string;
    size?: number;
}
const {
    char = "betty",
    color = "#966",
    outline = "#ffc",
    size = 210,
} = Astro.props;
---

<div
    class="char-button"
    style={`--char-color: ${color}; --hover-color: ${outline}; width: ${size - 16}px; height: ${size - 16}px;`}
    onclick={`window.location.href = "/characters/${char.toLowerCase()}"`}
>
    <object
        style={`--size: ${size - 16}px;`}
        class="bleh"
        data={`/characters/${char.toLowerCase()}/art.svg`}></object>
</div>

<style lang="scss">
    .char-button {
        aspect-ratio: 1 / 1;
        --char-color: #966;
        --hover-color: #ffc;
        --outline-radius: 2.5px;
        --outline-color: var(--char-color);
        --size: 250px;
        --padding: 16px;
        padding: 8px;
        background-color: var(--col-dark);
        border-radius: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: 0.1s all;
        box-shadow: inset 0 0 0 0px var(--hover-color);
        transition-timing-function: linear;
        width: calc(var(--size) - var(--padding));
        height: calc(var(--size) - var(--padding));
        cursor: pointer;
    }

    .char-button:hover {
        background-color: var(--char-color);
        box-shadow: inset 0 0 0 6px var(--hover-color);
    }

    .char-button .bleh {
        aspect-ratio: 1 / 1;

        width: calc(var(--size) - var(--padding));
        height: calc(var(--size) - var(--padding));

        pointer-events: none;
        text-align: center;
        transition: 0.1s filter;
        transition-timing-function: linear;
        filter: drop-shadow(
                calc(2 * var(--outline-radius)) calc(2 * var(--outline-radius))
                    0px var(--outline-color)
            )
            drop-shadow(
                calc(2 * var(--outline-radius)) calc(-1 * var(--outline-radius))
                    0px var(--outline-color)
            )
            drop-shadow(
                calc(-1 * var(--outline-radius)) calc(2 * var(--outline-radius))
                    0px var(--outline-color)
            )
            drop-shadow(
                calc(-1 * var(--outline-radius))
                    calc(-1 * var(--outline-radius)) 0px var(--outline-color)
            );
    }

    .char-button:hover .bleh {
        animation: shake 0.5s;
        animation-iteration-count: 1;
        --outline-radius: 4.5px;
        --outline-color: var(--hover-color);
    }

    // god i wish there was an easier way to do this
    @keyframes shake {
        0% {
            translate: 0px 0px;
        }
        20% {
            translate: 0px -2px;
        }
        100% {
            translate: 0px 0px;
        }
    }
</style>
